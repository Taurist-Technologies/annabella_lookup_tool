
        // State name to abbreviation mapping
        const stateAbbreviations = {
            'Alabama': 'AL',
            'Alaska': 'AK',
            'Arizona': 'AZ',
            'Arkansas': 'AR',
            'California': 'CA',
            'Colorado': 'CO',
            'Connecticut': 'CT',
            'Delaware': 'DE',
            'Florida': 'FL',
            'Georgia': 'GA',
            'Hawaii': 'HI',
            'Idaho': 'ID',
            'Illinois': 'IL',
            'Indiana': 'IN',
            'Iowa': 'IA',
            'Kansas': 'KS',
            'Kentucky': 'KY',
            'Louisiana': 'LA',
            'Maine': 'ME',
            'Maryland': 'MD',
            'Massachusetts': 'MA',
            'Michigan': 'MI',
            'Minnesota': 'MN',
            'Mississippi': 'MS',
            'Missouri': 'MO',
            'Montana': 'MT',
            'Nebraska': 'NE',
            'Nevada': 'NV',
            'New Hampshire': 'NH',
            'New Jersey': 'NJ',
            'New Mexico': 'NM',
            'New York': 'NY',
            'North Carolina': 'NC',
            'North Dakota': 'ND',
            'Ohio': 'OH',
            'Oklahoma': 'OK',
            'Oregon': 'OR',
            'Pennsylvania': 'PA',
            'Rhode Island': 'RI',
            'South Carolina': 'SC',
            'South Dakota': 'SD',
            'Tennessee': 'TN',
            'Texas': 'TX',
            'Utah': 'UT',
            'Vermont': 'VT',
            'Virginia': 'VA',
            'Washington': 'WA',
            'Washington DC': 'DC',
            'West Virginia': 'WV',
            'Wisconsin': 'WI',
            'Wyoming': 'WY'
        };

        // Function to load providers based on state
        async function loadProviders(stateName) {
            const providerSelect = document.getElementById('provider');
            const providerGroup = document.getElementById('provider-group');

            if (!stateName) {
                providerSelect.innerHTML = '<option value="">Select a provider...</option>';
                providerGroup.classList.add('hidden');
                return;
            }

            const stateAbbr = stateAbbreviations[stateName];
            if (!stateAbbr) {
                providerSelect.innerHTML = '<option value="">Select a provider...</option>';
                providerGroup.classList.add('hidden');
                return;
            }

            // Show the provider group and set loading state
            providerGroup.classList.remove('hidden');
            providerSelect.innerHTML = '<option value="">Loading providers...</option>';

            try {
                const response = await fetch(`https://annabellastg.comitdevelopers.com/wp-json/hbe/v1/providers-by-state/${stateAbbr}`);

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const result = await response.json();
                console.log('Providers for', stateName, ':', result);

                // Clear and populate provider dropdown
                providerSelect.innerHTML = '<option value="">Select a provider...</option>';

                if (result.providers && result.providers.length > 0) {
                    // Sort providers by display name
                    const sortedProviders = result.providers.sort((a, b) => {
                        return a.provider_display_name.localeCompare(b.provider_display_name);
                    });

                    sortedProviders.forEach(provider => {
                        const option = document.createElement('option');
                        option.value = provider.id;
                        option.textContent = provider.provider_display_name;
                        providerSelect.appendChild(option);
                    });
                } else {
                    providerSelect.innerHTML = '<option value="">No providers available</option>';
                }

            } catch (error) {
                console.error('Error loading providers:', error);
                providerSelect.innerHTML = '<option value="">Error loading providers</option>';
            }
        }

        // Add event listener to state dropdown
        document.getElementById('momAddressState').addEventListener('change', function() {
            loadProviders(this.value);
        });

        document.getElementById('insurance-form').addEventListener('submit', async function(e) {
            e.preventDefault();

            // Get form data
            const formData = new FormData(this);
            const unixTimestamp = Math.floor(Date.now() / 1000);
            const data = {
                extId: `${unixTimestamp}-ANB`,
                firstName: "",
                lastName: "",
                momEmail: formData.get('email'),
                provider: formData.get('provider'),
                momAddressState: formData.get('momAddressState'),
                referralDetails: ""
            };

            // Show loading
            document.getElementById('form-section').classList.add('hidden');
            document.getElementById('loading-section').classList.remove('hidden');

            try {
                // Make API request
                const response = await fetch('https://annabellastg.comitdevelopers.com/wp-json/hbe/v1/order', {
                    method: 'POST',
                    headers: {
                        'X-HBE-API-Key': 'M2LsdHS6PtLiZ2OLxTPRdfT+cBXHj9I3lav0O+O3hw4=',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const result = await response.json();

                // Check if we have a resume token
                if (!result.resume_token) {
                    throw new Error('No resume token received from API');
                }

                // Hide loading and show countdown
                document.getElementById('loading-section').classList.add('hidden');
                document.getElementById('countdown-section').classList.remove('hidden');

                // Start countdown
                let count = 5;
                const countdownElement = document.getElementById('countdown-number');

                const countdown = setInterval(() => {
                    count--;
                    countdownElement.textContent = count;

                    if (count <= 0) {
                        clearInterval(countdown);
                        // Redirect to insurance checker
                        window.location.href = `https://annabellastg.comitdevelopers.com/?gf_token=${result.resume_token}`;
                    }
                }, 1000);

            } catch (error) {
                console.error('Error:', error);

                // Hide loading and show error
                document.getElementById('loading-section').classList.add('hidden');
                document.getElementById('form-section').classList.remove('hidden');

                const errorElement = document.getElementById('error-message');
                errorElement.textContent = `Error: ${error.message}`;
                errorElement.classList.remove('hidden');
            }
        });
    